<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.12.0" xml:lang="en-US">
  <compounddef id="keyboard_task_8cpp" kind="file" language="C++">
    <compoundname>keyboardTask.cpp</compoundname>
    <includes refid="keyboard_task_8h" local="yes">keyboardTask.h</includes>
    <incdepgraph>
      <node id="3">
        <label>Arduino.h</label>
      </node>
      <node id="1">
        <label>src/keyboardTask.cpp</label>
        <link refid="keyboard_task_8cpp"/>
        <childnode refid="2" relation="include">
        </childnode>
      </node>
      <node id="2">
        <label>keyboardTask.h</label>
        <link refid="keyboard_task_8h_source"/>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="4" relation="include">
        </childnode>
      </node>
      <node id="4">
        <label>M5Cardputer.h</label>
      </node>
    </incdepgraph>
    <sectiondef kind="func">
      <memberdef kind="function" id="keyboard_task_8cpp_1ae64f4525ae457ae982db2ec17710180f" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void keyBoardLoop</definition>
        <argsstring>(void *parameters)</argsstring>
        <name>keyBoardLoop</name>
        <param>
          <type>void *</type>
          <declname>parameters</declname>
        </param>
        <briefdescription>
<para>Task handler for the keyboard task. Runs the first section when called, creating the timer interrupt &amp; pausing itself, after that, each timer interrupt will make it wake up, execute one loop pass &amp; pause again, thus updating the buffer. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>parameters</parametername>
</parameternamelist>
<parameterdescription>
<para>Standar parameters passed as a void pointer, in this case it mus be cast to buffer* </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/keyboardTask.cpp" line="80" column="6" bodyfile="src/keyboardTask.cpp" bodystart="80" bodyend="175"/>
      </memberdef>
      <memberdef kind="function" id="keyboard_task_8cpp_1aede5659edabbe94cde2dcdd9e0ccef4a" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>navSignal</type>
        <definition>navSignal navSwitch</definition>
        <argsstring>(char aux)</argsstring>
        <name>navSwitch</name>
        <param>
          <type>char</type>
          <declname>aux</declname>
        </param>
        <briefdescription>
<para>A simple switch statement that trnslates keystrokes to the proper nav signals. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>aux</parametername>
</parameternamelist>
<parameterdescription>
<para>A char character </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>A nav signal (enum) </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/keyboardTask.cpp" line="177" column="11" bodyfile="src/keyboardTask.cpp" bodystart="177" bodyend="196"/>
      </memberdef>
      <memberdef kind="function" id="keyboard_task_8cpp_1af3ce5ff30e830a34b29fb2940e47630d" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void IRAM_ATTR</type>
        <definition>void IRAM_ATTR keyBoardISR</definition>
        <argsstring>()</argsstring>
        <name>keyBoardISR</name>
        <briefdescription>
<para>ISR for the timer interrupt, checks wether the keyboard is enabled, if so, updates it and wakes up the keyboard thread if there&apos;s new data to add to the buffer. </para>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="return"><para><linebreak/>
 </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/keyboardTask.cpp" line="198" column="16" bodyfile="src/keyboardTask.cpp" bodystart="198" bodyend="204"/>
      </memberdef>
    </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="preprocessor">#include<sp/>&quot;keyboardTask.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2"><highlight class="normal"></highlight></codeline>
<codeline lineno="3"><highlight class="normal"></highlight><highlight class="comment">//buffer_Class<sp/>functions</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4" refid="classbuffer___class_1a0a59b9bc631ed522318eaf21ce465bba" refkind="member"><highlight class="normal"><ref refid="classbuffer___class_1a0a59b9bc631ed522318eaf21ce465bba" kindref="member">buffer_Class::buffer_Class</ref>(){</highlight></codeline>
<codeline lineno="5"><highlight class="normal"><sp/><sp/><sp/><sp/>this-&gt;size<sp/>=<sp/>50;</highlight></codeline>
<codeline lineno="6"><highlight class="normal"><sp/><sp/><sp/><sp/>this-&gt;data<sp/>=<sp/>(</highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*)calloc(this-&gt;size,1);</highlight></codeline>
<codeline lineno="7"><highlight class="normal"><sp/><sp/><sp/><sp/>this-&gt;<ref refid="classbuffer___class_1a3ab4b8088883189f50066d32c59f3761" kindref="member">cursor</ref><sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="8"><highlight class="normal"><sp/><sp/><sp/><sp/>this-&gt;<ref refid="classbuffer___class_1a0b98b8aef328ebdd93ae50b1139bc06e" kindref="member">keyboardEnable</ref><sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="9"><highlight class="normal"><sp/><sp/><sp/><sp/>this-&gt;timer<sp/>=<sp/><sp/>timerBegin(2,<sp/>80,<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">);<sp/></highlight><highlight class="comment">//Create<sp/>timer<sp/>on<sp/>core<sp/>1<sp/>(timers<sp/>are<sp/>0,1,2,3<sp/>2<sp/>per<sp/>core)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="10"><highlight class="normal">}</highlight></codeline>
<codeline lineno="11"><highlight class="normal"></highlight></codeline>
<codeline lineno="12" refid="classbuffer___class_1a04c135f6f3445c7d16b862cb5890fe53" refkind="member"><highlight class="normal"><ref refid="classbuffer___class_1a0a59b9bc631ed522318eaf21ce465bba" kindref="member">buffer_Class::buffer_Class</ref>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>size){</highlight></codeline>
<codeline lineno="13"><highlight class="normal"><sp/><sp/><sp/><sp/>this-&gt;size<sp/>=<sp/>size;</highlight></codeline>
<codeline lineno="14"><highlight class="normal"><sp/><sp/><sp/><sp/>this-&gt;data<sp/>=<sp/>(</highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*)calloc(this-&gt;size,1);</highlight></codeline>
<codeline lineno="15"><highlight class="normal"><sp/><sp/><sp/><sp/>this-&gt;<ref refid="classbuffer___class_1a3ab4b8088883189f50066d32c59f3761" kindref="member">cursor</ref><sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="16"><highlight class="normal"><sp/><sp/><sp/><sp/>this-&gt;<ref refid="classbuffer___class_1a0b98b8aef328ebdd93ae50b1139bc06e" kindref="member">keyboardEnable</ref><sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="17"><highlight class="normal"><sp/><sp/><sp/><sp/>this-&gt;timer<sp/>=<sp/><sp/>timerBegin(2,<sp/>80,<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">);<sp/></highlight><highlight class="comment">//Create<sp/>timer<sp/>on<sp/>core<sp/>1<sp/>(timers<sp/>are<sp/>0,1,2,3<sp/>2<sp/>per<sp/>core)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="18"><highlight class="normal">}</highlight></codeline>
<codeline lineno="19"><highlight class="normal"></highlight></codeline>
<codeline lineno="20" refid="classbuffer___class_1a2c8542d9cbe7433a80c3a8dedc5dbb51" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classbuffer___class_1a2c8542d9cbe7433a80c3a8dedc5dbb51" kindref="member">buffer_Class::begin</ref>(</highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>keyboardEnable,<sp/>mode<sp/>Mode){</highlight></codeline>
<codeline lineno="21"><highlight class="normal"><sp/><sp/><sp/><sp/>BaseType_t<sp/>key<sp/>=<sp/>xTaskCreatePinnedToCore(keyBoardLoop,<sp/></highlight><highlight class="stringliteral">&quot;Keyboard<sp/>thread&quot;</highlight><highlight class="normal">,<sp/>10000,<sp/>NULL,<sp/>0,<sp/>&amp;this-&gt;keyboardTask,<sp/>0);<sp/></highlight><highlight class="comment">//Creates<sp/>thread<sp/>for<sp/>the<sp/>keyboard<sp/>on<sp/>core<sp/>0</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="22"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(key<sp/>!=<sp/>pdPASS)<sp/>log_i(</highlight><highlight class="stringliteral">&quot;ERR&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="23"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>log_i(</highlight><highlight class="stringliteral">&quot;Keyboard<sp/>task<sp/>created&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="24"><highlight class="normal"><sp/><sp/><sp/><sp/>this-&gt;keyboardEnable<sp/>=<sp/><ref refid="classbuffer___class_1a0b98b8aef328ebdd93ae50b1139bc06e" kindref="member">keyboardEnable</ref>;</highlight></codeline>
<codeline lineno="25"><highlight class="normal"><sp/><sp/><sp/><sp/>this-&gt;Mode<sp/>=<sp/><ref refid="classbuffer___class_1a1ac63f7a07b68c3d7e13e56da6689413" kindref="member">Mode</ref>;</highlight></codeline>
<codeline lineno="26"><highlight class="normal">}</highlight></codeline>
<codeline lineno="27"><highlight class="normal"></highlight></codeline>
<codeline lineno="28" refid="classbuffer___class_1a2db51cdf715f303efc54f2a97fad5785" refkind="member"><highlight class="normal">TaskHandle_t*<sp/><ref refid="classbuffer___class_1a2db51cdf715f303efc54f2a97fad5785" kindref="member">buffer_Class::getTaskHandle</ref>(){</highlight></codeline>
<codeline lineno="29"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>&amp;this-&gt;keyboardTask;</highlight></codeline>
<codeline lineno="30"><highlight class="normal">}</highlight></codeline>
<codeline lineno="31"><highlight class="normal"></highlight></codeline>
<codeline lineno="32" refid="classbuffer___class_1a1868135a1d4c1885afac8e601a171057" refkind="member"><highlight class="normal">hw_timer_t*<sp/><ref refid="classbuffer___class_1a1868135a1d4c1885afac8e601a171057" kindref="member">buffer_Class::getHardwareTimer</ref>(){</highlight></codeline>
<codeline lineno="33"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>this-&gt;timer;</highlight></codeline>
<codeline lineno="34"><highlight class="normal">}</highlight></codeline>
<codeline lineno="35"><highlight class="normal"></highlight></codeline>
<codeline lineno="36" refid="classbuffer___class_1ace4fcd26fb004aeb309d96b263b69a22" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*<sp/><ref refid="classbuffer___class_1ace4fcd26fb004aeb309d96b263b69a22" kindref="member">buffer_Class::getData</ref>(){</highlight></codeline>
<codeline lineno="37"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>this-&gt;data;</highlight></codeline>
<codeline lineno="38"><highlight class="normal">}</highlight></codeline>
<codeline lineno="39"><highlight class="normal"></highlight></codeline>
<codeline lineno="40" refid="classbuffer___class_1a9debd110754d53e4e49dab7391689ee5" refkind="member"><highlight class="normal">String<sp/><ref refid="classbuffer___class_1a9debd110754d53e4e49dab7391689ee5" kindref="member">buffer_Class::getDataStr</ref>(){</highlight></codeline>
<codeline lineno="41"><highlight class="normal"><sp/><sp/><sp/><sp/>String<sp/>dataStr<sp/>=<sp/></highlight><highlight class="stringliteral">&quot;&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="42"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i<sp/>=<sp/>0;<sp/>i<sp/>&lt;this-&gt;size;<sp/>i++){</highlight></codeline>
<codeline lineno="43"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>dataStr<sp/>+=<sp/>this-&gt;data[i];</highlight></codeline>
<codeline lineno="44"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="45"><highlight class="normal"></highlight></codeline>
<codeline lineno="46"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>dataStr;</highlight></codeline>
<codeline lineno="47"><highlight class="normal">}</highlight></codeline>
<codeline lineno="48"><highlight class="normal"></highlight></codeline>
<codeline lineno="49" refid="classbuffer___class_1a3e7fefdd89f9d087f79e04f66dc3ef8c" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classbuffer___class_1a3e7fefdd89f9d087f79e04f66dc3ef8c" kindref="member">buffer_Class::del</ref>(){</highlight></codeline>
<codeline lineno="50"><highlight class="normal"><sp/><sp/><sp/><sp/>this-&gt;data[this-&gt;<ref refid="classbuffer___class_1a3ab4b8088883189f50066d32c59f3761" kindref="member">cursor</ref>]<sp/>=<sp/></highlight><highlight class="charliteral">&apos;<sp/>&apos;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="51"><highlight class="normal">}</highlight></codeline>
<codeline lineno="52"><highlight class="normal"></highlight></codeline>
<codeline lineno="53" refid="classbuffer___class_1a692844f0abdde0a1111152441a112cff" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="classbuffer___class_1a3e7fefdd89f9d087f79e04f66dc3ef8c" kindref="member">buffer_Class::del</ref>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>cursor){</highlight></codeline>
<codeline lineno="54"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="classbuffer___class_1a3ab4b8088883189f50066d32c59f3761" kindref="member">cursor &lt; 0 || cursor &gt;</ref><sp/>Buffer.size)<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>-1;</highlight></codeline>
<codeline lineno="55"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="56"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>this-&gt;cursor<sp/>=<sp/><ref refid="classbuffer___class_1a3ab4b8088883189f50066d32c59f3761" kindref="member">cursor</ref>;</highlight></codeline>
<codeline lineno="57"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>this-&gt;<ref refid="classbuffer___class_1a3e7fefdd89f9d087f79e04f66dc3ef8c" kindref="member">del</ref>();</highlight></codeline>
<codeline lineno="58"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>0;</highlight></codeline>
<codeline lineno="59"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="60"><highlight class="normal">}</highlight></codeline>
<codeline lineno="61"><highlight class="normal"></highlight></codeline>
<codeline lineno="62" refid="classbuffer___class_1a6c2aa2166c5fafbbfe583eb1c4411e49" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="classbuffer___class_1a6c2aa2166c5fafbbfe583eb1c4411e49" kindref="member">buffer_Class::getBufferSize</ref>(){</highlight></codeline>
<codeline lineno="63"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>this-&gt;size;</highlight></codeline>
<codeline lineno="64"><highlight class="normal">}</highlight></codeline>
<codeline lineno="65"><highlight class="normal"></highlight></codeline>
<codeline lineno="66" refid="classbuffer___class_1a6b423be6bc54130652e70f0e9010b619" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classbuffer___class_1a6b423be6bc54130652e70f0e9010b619" kindref="member">buffer_Class::clearBuffer</ref>(){</highlight></codeline>
<codeline lineno="67"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i=<sp/>0;<sp/>i<sp/>&lt;<sp/>this-&gt;size;<sp/>i++){</highlight></codeline>
<codeline lineno="68"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>this-&gt;data[i]<sp/>=<sp/></highlight><highlight class="charliteral">&apos;<sp/>&apos;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="69"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="70"><highlight class="normal"><sp/><sp/><sp/><sp/>Buffer.<ref refid="classbuffer___class_1a3ab4b8088883189f50066d32c59f3761" kindref="member">cursor</ref><sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="71"><highlight class="normal">}</highlight></codeline>
<codeline lineno="72"><highlight class="normal"></highlight></codeline>
<codeline lineno="73" refid="classbuffer___class_1a9501def46c3074fc723c828e8b4fba03" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classbuffer___class_1a9501def46c3074fc723c828e8b4fba03" kindref="member">buffer_Class::killTask</ref>(){</highlight></codeline>
<codeline lineno="74"><highlight class="normal"><sp/><sp/><sp/><sp/>free(this-&gt;data);</highlight></codeline>
<codeline lineno="75"><highlight class="normal"><sp/><sp/><sp/><sp/>vTaskDelete(this-&gt;keyboardTask);</highlight></codeline>
<codeline lineno="76"><highlight class="normal"><sp/><sp/><sp/><sp/>timerDetachInterrupt(this-&gt;timer);</highlight></codeline>
<codeline lineno="77"><highlight class="normal">}</highlight></codeline>
<codeline lineno="78"><highlight class="normal"></highlight></codeline>
<codeline lineno="79"><highlight class="normal"></highlight></codeline>
<codeline lineno="80"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>keyBoardLoop(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">*<sp/>parameters)<sp/>{</highlight></codeline>
<codeline lineno="81"><highlight class="normal"><sp/><sp/>log_i(</highlight><highlight class="stringliteral">&quot;Keyboard<sp/>task<sp/>created&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="82"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//Create<sp/>the<sp/>interrupt<sp/>we&apos;ll<sp/>use<sp/>to<sp/>time<sp/>how<sp/>many<sp/>times<sp/>per<sp/>second<sp/>we<sp/>check<sp/>the<sp/>keyboard<sp/>input</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="83"><highlight class="normal"><sp/><sp/>timerAttachInterrupt(Buffer.<ref refid="classbuffer___class_1a1868135a1d4c1885afac8e601a171057" kindref="member">getHardwareTimer</ref>(),<sp/>&amp;keyBoardISR,<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">);<sp/></highlight><highlight class="comment">//Atach<sp/>interrupt<sp/>to<sp/>the<sp/>timer</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="84"><highlight class="normal"><sp/><sp/>timerAlarmWrite(Buffer.<ref refid="classbuffer___class_1a1868135a1d4c1885afac8e601a171057" kindref="member">getHardwareTimer</ref>(),<sp/>50000,<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">);<sp/></highlight><highlight class="comment">//Set<sp/>the<sp/>alarm<sp/>that<sp/>triggers<sp/>the<sp/>interrupt</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="85"><highlight class="normal"><sp/><sp/>timerAlarmEnable(Buffer.<ref refid="classbuffer___class_1a1868135a1d4c1885afac8e601a171057" kindref="member">getHardwareTimer</ref>());<sp/></highlight><highlight class="comment">//Enable<sp/>the<sp/>alarm</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="86"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//Suspend<sp/>the<sp/>current<sp/>task<sp/>(it&apos;ll<sp/>resume<sp/>from<sp/>here<sp/>once<sp/>the<sp/>interrupt<sp/>is<sp/>triggered)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="87"><highlight class="normal"><sp/><sp/>vTaskSuspend(NULL);</highlight></codeline>
<codeline lineno="88"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//Infinite<sp/>loop,<sp/>each<sp/>time<sp/>xTaskResumeFromISR<sp/>is<sp/>called<sp/>from<sp/>within<sp/>the<sp/>ISR,<sp/>a<sp/>round<sp/>of<sp/>this<sp/>loop<sp/>will</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="89"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//be<sp/>executed,<sp/>succesive<sp/>calls<sp/>to<sp/>resuming<sp/>won&apos;t<sp/>affect<sp/>an<sp/>already<sp/>resumed<sp/>task,<sp/>&amp;<sp/>the<sp/>loop<sp/>suspends<sp/>the<sp/>task</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="90"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//once<sp/>the<sp/>round<sp/>is<sp/>finished</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="91"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(;;){</highlight></codeline>
<codeline lineno="92"><highlight class="normal"><sp/><sp/><sp/><sp/>Keyboard_Class::KeysState<sp/>status<sp/>=<sp/>M5Cardputer.Keyboard.keysState();</highlight></codeline>
<codeline lineno="93"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//Handle<sp/>keyboard<sp/>presses</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="94"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(Buffer.<ref refid="classbuffer___class_1a1ac63f7a07b68c3d7e13e56da6689413" kindref="member">Mode</ref><sp/>==<sp/>mode::text)<sp/>{</highlight></codeline>
<codeline lineno="95"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//We<sp/>are<sp/>in<sp/>text<sp/>entry<sp/>mode</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="96"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(Buffer.<ref refid="classbuffer___class_1a3ab4b8088883189f50066d32c59f3761" kindref="member">cursor</ref><sp/>==<sp/>Buffer.<ref refid="classbuffer___class_1a6c2aa2166c5fafbbfe583eb1c4411e49" kindref="member">getBufferSize</ref>())<sp/>Buffer.<ref refid="classbuffer___class_1a6b423be6bc54130652e70f0e9010b619" kindref="member">clearBuffer</ref>();<sp/></highlight><highlight class="comment">//Check<sp/>if<sp/>the<sp/>buffer<sp/>is<sp/>full</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="97"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="98"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(status.word.size()<sp/>==<sp/>0)<sp/>{</highlight></codeline>
<codeline lineno="99"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//Special<sp/>cases</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="100"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(status.del)<sp/>{</highlight></codeline>
<codeline lineno="101"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(status.fn)<sp/>{</highlight></codeline>
<codeline lineno="102"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//supr<sp/>/<sp/>del</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="103"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>log_i(</highlight><highlight class="stringliteral">&quot;Supr<sp/>pressed&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="104"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i<sp/>=<sp/>Buffer.<ref refid="classbuffer___class_1a3ab4b8088883189f50066d32c59f3761" kindref="member">cursor</ref>+1;<sp/>i<sp/>&lt;<sp/>Buffer.<ref refid="classbuffer___class_1a6c2aa2166c5fafbbfe583eb1c4411e49" kindref="member">getBufferSize</ref>()<sp/>-1;<sp/>i++){</highlight></codeline>
<codeline lineno="105"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Buffer.<ref refid="classbuffer___class_1ace4fcd26fb004aeb309d96b263b69a22" kindref="member">getData</ref>()[i]<sp/>=<sp/>Buffer.<ref refid="classbuffer___class_1ace4fcd26fb004aeb309d96b263b69a22" kindref="member">getData</ref>()[i+1];</highlight></codeline>
<codeline lineno="106"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="107"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="108"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//Backspace</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="109"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>log_i(</highlight><highlight class="stringliteral">&quot;Backspace<sp/>pressed&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="110"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(Buffer.<ref refid="classbuffer___class_1a3ab4b8088883189f50066d32c59f3761" kindref="member">cursor</ref><sp/>!=<sp/>0)<sp/>{</highlight></codeline>
<codeline lineno="111"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Buffer.<ref refid="classbuffer___class_1a3ab4b8088883189f50066d32c59f3761" kindref="member">cursor</ref><sp/>--;</highlight></codeline>
<codeline lineno="112"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Buffer.<ref refid="classbuffer___class_1ace4fcd26fb004aeb309d96b263b69a22" kindref="member">getData</ref>()[Buffer.<ref refid="classbuffer___class_1a3ab4b8088883189f50066d32c59f3761" kindref="member">cursor</ref>]<sp/>=<sp/></highlight><highlight class="charliteral">&apos;<sp/>&apos;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="113"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="114"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="115"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="116"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(status.tab){</highlight></codeline>
<codeline lineno="117"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//Tab<sp/>single<sp/>press,<sp/>insert<sp/>\t</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="118"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>log_i(</highlight><highlight class="stringliteral">&quot;Tab<sp/>pressed&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="119"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Buffer.<ref refid="classbuffer___class_1ace4fcd26fb004aeb309d96b263b69a22" kindref="member">getData</ref>()[Buffer.<ref refid="classbuffer___class_1a3ab4b8088883189f50066d32c59f3761" kindref="member">cursor</ref>]<sp/>=<sp/></highlight><highlight class="charliteral">&apos;\t&apos;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="120"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Buffer.<ref refid="classbuffer___class_1a3ab4b8088883189f50066d32c59f3761" kindref="member">cursor</ref>++;</highlight></codeline>
<codeline lineno="121"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(status.enter){</highlight></codeline>
<codeline lineno="122"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(status.fn)<sp/>Buffer.<ref refid="classbuffer___class_1af0d32aa1fdeac32dc3ee1a0282de80be" kindref="member">signal</ref><sp/>=<sp/>navSignal::ENTER;</highlight></codeline>
<codeline lineno="123"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="124"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//Enter<sp/>single<sp/>press,<sp/>insert<sp/>\n</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="125"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>log_i(</highlight><highlight class="stringliteral">&quot;Enter<sp/>pressed&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="126"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Buffer.<ref refid="classbuffer___class_1ace4fcd26fb004aeb309d96b263b69a22" kindref="member">getData</ref>()[Buffer.<ref refid="classbuffer___class_1a3ab4b8088883189f50066d32c59f3761" kindref="member">cursor</ref>]<sp/>=<sp/></highlight><highlight class="charliteral">&apos;\n&apos;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="127"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Buffer.<ref refid="classbuffer___class_1a3ab4b8088883189f50066d32c59f3761" kindref="member">cursor</ref>++;</highlight></codeline>
<codeline lineno="128"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="129"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(status.alt<sp/>||<sp/>status.ctrl<sp/>||<sp/>status.fn<sp/>||<sp/>status.opt<sp/>||<sp/>status.shift<sp/>||<sp/>status.space)<sp/>Buffer.<ref refid="classbuffer___class_1af0d32aa1fdeac32dc3ee1a0282de80be" kindref="member">signal</ref><sp/>=<sp/>navSignal::NP;</highlight></codeline>
<codeline lineno="130"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>log_i(</highlight><highlight class="stringliteral">&quot;Keyboard<sp/>release&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="131"><highlight class="normal"></highlight></codeline>
<codeline lineno="132"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//Maybe<sp/>implement<sp/>opt,<sp/>alt<sp/>&amp;<sp/>ctrl?<sp/>for<sp/>text<sp/>mode?<sp/></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="133"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//Opt<sp/>should<sp/>bring<sp/>out<sp/>the<sp/>conf<sp/>menu<sp/>for<sp/>the<sp/>programme,</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="134"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//Alt<sp/>&amp;<sp/>ctrl<sp/>should<sp/>be<sp/>used<sp/>in<sp/>some<sp/>way<sp/>for<sp/>keyboard<sp/>shortcuts,<sp/>but<sp/>they<sp/>should<sp/>be<sp/>programme<sp/>specific,</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="135"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//I&apos;m<sp/>not<sp/>sure<sp/>how<sp/>i<sp/>wanna<sp/>implement<sp/>that<sp/></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="136"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//(maybe<sp/>add<sp/>a<sp/>possible<sp/>navSwicht<sp/>style<sp/>func<sp/>given<sp/>when<sp/>creating<sp/>the<sp/>buffer?)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="137"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//Other<sp/>possible<sp/>idea<sp/>is<sp/>fn+shift<sp/>=<sp/>BLOCK<sp/>MAYUS,<sp/></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="138"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//only<sp/>if<sp/>i<sp/>find<sp/>an<sp/>elegant<sp/>way<sp/>to<sp/>show<sp/>it<sp/>is<sp/>active<sp/>to<sp/>the<sp/>user</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="139"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="140"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>log_i(</highlight><highlight class="stringliteral">&quot;Keyboard<sp/>pressed,<sp/>text<sp/>entry<sp/>mode,<sp/>word<sp/>is<sp/>%i<sp/>char&quot;</highlight><highlight class="normal">,<sp/>status.word.size());</highlight></codeline>
<codeline lineno="141"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i=<sp/>0;<sp/>i&lt;<sp/>status.word.size();<sp/>i++){</highlight></codeline>
<codeline lineno="142"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(status.fn)<sp/>{</highlight></codeline>
<codeline lineno="143"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//Nav<sp/>controls<sp/>for<sp/>text<sp/>editing</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="144"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>aux<sp/>=<sp/>status.word[i];</highlight></codeline>
<codeline lineno="145"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Buffer.<ref refid="classbuffer___class_1af0d32aa1fdeac32dc3ee1a0282de80be" kindref="member">signal</ref><sp/>=<sp/>navSwitch(aux);</highlight></codeline>
<codeline lineno="146"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="147"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//Normal<sp/>keys<sp/></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="148"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Buffer.<ref refid="classbuffer___class_1ace4fcd26fb004aeb309d96b263b69a22" kindref="member">getData</ref>()[Buffer.<ref refid="classbuffer___class_1a3ab4b8088883189f50066d32c59f3761" kindref="member">cursor</ref>]<sp/>=<sp/>status.word[i];</highlight></codeline>
<codeline lineno="149"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Buffer.<ref refid="classbuffer___class_1a3ab4b8088883189f50066d32c59f3761" kindref="member">cursor</ref>++;</highlight></codeline>
<codeline lineno="150"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="151"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="152"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="153"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>log_i(</highlight><highlight class="stringliteral">&quot;Buffer:<sp/>\&quot;%s\&quot;\n&quot;</highlight><highlight class="normal">,<sp/>Buffer.<ref refid="classbuffer___class_1a9debd110754d53e4e49dab7391689ee5" kindref="member">getDataStr</ref>().c_str());</highlight></codeline>
<codeline lineno="154"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>log_i(</highlight><highlight class="stringliteral">&quot;Nav<sp/>signal:<sp/>%i\n&quot;</highlight><highlight class="normal">,<sp/>Buffer.<ref refid="classbuffer___class_1af0d32aa1fdeac32dc3ee1a0282de80be" kindref="member">signal</ref>);</highlight></codeline>
<codeline lineno="155"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="156"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//we<sp/>are<sp/>in<sp/>navigation<sp/>mode</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="157"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(status.word.size()<sp/>==1)<sp/>{</highlight></codeline>
<codeline lineno="158"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>log_i(</highlight><highlight class="stringliteral">&quot;Keyboard<sp/>pressed,<sp/>menu<sp/>navigation<sp/>mode&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="159"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>aux<sp/>=<sp/>status.word[0];</highlight></codeline>
<codeline lineno="160"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Buffer.<ref refid="classbuffer___class_1af0d32aa1fdeac32dc3ee1a0282de80be" kindref="member">signal</ref><sp/>=<sp/>navSwitch(aux);</highlight></codeline>
<codeline lineno="161"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(status.enter)<sp/>{</highlight></codeline>
<codeline lineno="162"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Buffer.<ref refid="classbuffer___class_1af0d32aa1fdeac32dc3ee1a0282de80be" kindref="member">signal</ref><sp/>=<sp/>navSignal::ENTER;</highlight></codeline>
<codeline lineno="163"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>log_i(</highlight><highlight class="stringliteral">&quot;ENTER<sp/>signal&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="164"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(status.opt){</highlight></codeline>
<codeline lineno="165"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Buffer.<ref refid="classbuffer___class_1af0d32aa1fdeac32dc3ee1a0282de80be" kindref="member">signal</ref><sp/>=<sp/>navSignal::OPT;</highlight></codeline>
<codeline lineno="166"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>log_i(</highlight><highlight class="stringliteral">&quot;OPT<sp/>signal&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="167"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(status.alt||status.ctrl||status.del||status.fn||</highlight></codeline>
<codeline lineno="168"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>status.shift||status.space)<sp/>Buffer.<ref refid="classbuffer___class_1af0d32aa1fdeac32dc3ee1a0282de80be" kindref="member">signal</ref><sp/>=<sp/>navSignal::NP;</highlight></codeline>
<codeline lineno="169"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>log_i(</highlight><highlight class="stringliteral">&quot;Keboard<sp/>release&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="170"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>log_i(</highlight><highlight class="stringliteral">&quot;Nav<sp/>signal:<sp/>%i\n&quot;</highlight><highlight class="normal">,<sp/>Buffer.<ref refid="classbuffer___class_1af0d32aa1fdeac32dc3ee1a0282de80be" kindref="member">signal</ref>);</highlight></codeline>
<codeline lineno="171"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="172"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//Suspend<sp/>itself<sp/>until<sp/>it&apos;s<sp/>called<sp/>again</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="173"><highlight class="normal"><sp/><sp/><sp/><sp/>vTaskSuspend(NULL);</highlight></codeline>
<codeline lineno="174"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="175"><highlight class="normal">}</highlight></codeline>
<codeline lineno="176"><highlight class="normal"></highlight></codeline>
<codeline lineno="177"><highlight class="normal">navSignal<sp/>navSwitch(</highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>aux){</highlight></codeline>
<codeline lineno="178"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">switch</highlight><highlight class="normal">(aux){</highlight></codeline>
<codeline lineno="179"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/></highlight><highlight class="charliteral">&apos;`&apos;</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="180"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/></highlight><highlight class="charliteral">&apos;~&apos;</highlight><highlight class="normal">:<sp/>log_i(</highlight><highlight class="stringliteral">&quot;Esc<sp/>signal&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="181"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>navSignal::ESC;</highlight></codeline>
<codeline lineno="182"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/></highlight><highlight class="charliteral">&apos;;&apos;</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="183"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/></highlight><highlight class="charliteral">&apos;:&apos;</highlight><highlight class="normal">:<sp/>log_i(</highlight><highlight class="stringliteral">&quot;UP<sp/>signal&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="184"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>navSignal::UP;</highlight></codeline>
<codeline lineno="185"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/></highlight><highlight class="charliteral">&apos;.&apos;</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="186"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/></highlight><highlight class="charliteral">&apos;&gt;&apos;</highlight><highlight class="normal">:<sp/>log_i(</highlight><highlight class="stringliteral">&quot;DOWN<sp/>signal&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="187"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>navSignal::DOWN;</highlight></codeline>
<codeline lineno="188"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/></highlight><highlight class="charliteral">&apos;,&apos;</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="189"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/></highlight><highlight class="charliteral">&apos;&lt;&apos;</highlight><highlight class="normal">:<sp/>log_i(</highlight><highlight class="stringliteral">&quot;LEFT<sp/>signal&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="190"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>navSignal::LEFT;</highlight></codeline>
<codeline lineno="191"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/></highlight><highlight class="charliteral">&apos;/&apos;</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="192"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/></highlight><highlight class="charliteral">&apos;?&apos;</highlight><highlight class="normal">:<sp/>log_i(</highlight><highlight class="stringliteral">&quot;RIGHT<sp/>signal&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="193"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>navSignal::RIGHT;</highlight></codeline>
<codeline lineno="194"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">default</highlight><highlight class="normal">:<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>navSignal::NP;</highlight></codeline>
<codeline lineno="195"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="196"><highlight class="normal">}</highlight></codeline>
<codeline lineno="197"><highlight class="normal"></highlight></codeline>
<codeline lineno="198"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>IRAM_ATTR<sp/>keyBoardISR(){</highlight></codeline>
<codeline lineno="199"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//log_i(&quot;Interrupt<sp/>triggered&quot;);</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="200"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(Buffer.<ref refid="classbuffer___class_1a0b98b8aef328ebdd93ae50b1139bc06e" kindref="member">keyboardEnable</ref>)<sp/>{</highlight></codeline>
<codeline lineno="201"><highlight class="normal"><sp/><sp/><sp/><sp/>M5Cardputer.update();</highlight></codeline>
<codeline lineno="202"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(M5Cardputer.Keyboard.isChange())<sp/>xTaskResumeFromISR(*Buffer.<ref refid="classbuffer___class_1a2db51cdf715f303efc54f2a97fad5785" kindref="member">getTaskHandle</ref>());</highlight></codeline>
<codeline lineno="203"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="204"><highlight class="normal">}</highlight></codeline>
    </programlisting>
    <location file="src/keyboardTask.cpp"/>
  </compounddef>
</doxygen>
