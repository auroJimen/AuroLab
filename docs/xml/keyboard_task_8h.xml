<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.12.0" xml:lang="en-US">
  <compounddef id="keyboard_task_8h" kind="file" language="C++">
    <compoundname>keyboardTask.h</compoundname>
    <includes local="no">Arduino.h</includes>
    <includes local="no">M5Cardputer.h</includes>
    <includedby refid="_g_u_i_8h" local="yes">src/GUI.h</includedby>
    <includedby refid="keyboard_task_8cpp" local="yes">src/keyboardTask.cpp</includedby>
    <incdepgraph>
      <node id="2">
        <label>Arduino.h</label>
      </node>
      <node id="1">
        <label>src/keyboardTask.h</label>
        <link refid="keyboard_task_8h"/>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="3" relation="include">
        </childnode>
      </node>
      <node id="3">
        <label>M5Cardputer.h</label>
      </node>
    </incdepgraph>
    <invincdepgraph>
      <node id="3">
        <label>src/GUI.cpp</label>
        <link refid="_g_u_i_8cpp_source"/>
      </node>
      <node id="2">
        <label>src/GUI.h</label>
        <link refid="_g_u_i_8h_source"/>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="4" relation="include">
        </childnode>
      </node>
      <node id="5">
        <label>src/keyboardTask.cpp</label>
        <link refid="keyboard_task_8cpp_source"/>
      </node>
      <node id="1">
        <label>src/keyboardTask.h</label>
        <link refid="keyboard_task_8h"/>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="5" relation="include">
        </childnode>
      </node>
      <node id="4">
        <label>src/main.cpp</label>
        <link refid="main_8cpp_source"/>
      </node>
    </invincdepgraph>
    <innerclass refid="classbuffer___class" prot="public">buffer_Class</innerclass>
    <sectiondef kind="enum">
      <memberdef kind="enum" id="keyboard_task_8h_1a1a6b6fb557d8d37d59700faf4e4c9167" prot="public" static="no" strong="no">
        <type></type>
        <name>mode</name>
        <enumvalue id="keyboard_task_8h_1a1a6b6fb557d8d37d59700faf4e4c9167a0e17259309839615d215adfe7a44fb50" prot="public">
          <name>text</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="keyboard_task_8h_1a1a6b6fb557d8d37d59700faf4e4c9167a1c214f0c06a8280b10407774cb30d5b8" prot="public">
          <name>nav</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/keyboardTask.h" line="4" column="1" bodyfile="src/keyboardTask.h" bodystart="4" bodyend="4"/>
      </memberdef>
      <memberdef kind="enum" id="keyboard_task_8h_1a99dd7c3327176546a60f8a1ac7806de2" prot="public" static="no" strong="no">
        <type></type>
        <name>navSignal</name>
        <enumvalue id="keyboard_task_8h_1a99dd7c3327176546a60f8a1ac7806de2af5297152557c7da396243000ca240e89" prot="public">
          <name>ESC</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="keyboard_task_8h_1a99dd7c3327176546a60f8a1ac7806de2a11563127ec3be864b514a1784c5d37a6" prot="public">
          <name>DEL</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="keyboard_task_8h_1a99dd7c3327176546a60f8a1ac7806de2aba595d8bca8bc5e67c37c0a9d89becfa" prot="public">
          <name>UP</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="keyboard_task_8h_1a99dd7c3327176546a60f8a1ac7806de2a9b0b4a95b99523966e0e34ffdadac9da" prot="public">
          <name>DOWN</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="keyboard_task_8h_1a99dd7c3327176546a60f8a1ac7806de2adb45120aafd37a973140edee24708065" prot="public">
          <name>LEFT</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="keyboard_task_8h_1a99dd7c3327176546a60f8a1ac7806de2aec8379af7490bb9eaaf579cf17876f38" prot="public">
          <name>RIGHT</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="keyboard_task_8h_1a99dd7c3327176546a60f8a1ac7806de2a951ab68bb8f7daafb78951107080904e" prot="public">
          <name>ENTER</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="keyboard_task_8h_1a99dd7c3327176546a60f8a1ac7806de2afbd0f14f73cfbbf6b15ca1b4418a6209" prot="public">
          <name>OPT</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="keyboard_task_8h_1a99dd7c3327176546a60f8a1ac7806de2a4bab504a61d7f2923c2225dc896c91c6" prot="public">
          <name>NP</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/keyboardTask.h" line="5" column="1" bodyfile="src/keyboardTask.h" bodystart="5" bodyend="5"/>
      </memberdef>
    </sectiondef>
    <sectiondef kind="var">
      <memberdef kind="variable" id="keyboard_task_8h_1a7d37674f503dac4c08ab7830b07e282c" prot="public" static="no" extern="yes" mutable="no">
        <type><ref refid="classbuffer___class" kindref="compound">buffer_Class</ref></type>
        <definition>buffer_Class Buffer</definition>
        <argsstring></argsstring>
        <name>Buffer</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/keyboardTask.h" line="74" column="21" bodyfile="src/main.cpp" bodystart="9" bodyend="-1" declfile="src/keyboardTask.h" declline="74" declcolumn="21"/>
      </memberdef>
    </sectiondef>
    <sectiondef kind="func">
      <memberdef kind="function" id="keyboard_task_8h_1ae64f4525ae457ae982db2ec17710180f" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void keyBoardLoop</definition>
        <argsstring>(void *parameters)</argsstring>
        <name>keyBoardLoop</name>
        <param>
          <type>void *</type>
          <declname>parameters</declname>
        </param>
        <briefdescription>
<para>Task handler for the keyboard task. Runs the first section when called, creating the timer interrupt &amp; pausing itself, after that, each timer interrupt will make it wake up, execute one loop pass &amp; pause again, thus updating the buffer. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>parameters</parametername>
</parameternamelist>
<parameterdescription>
<para>Standar parameters passed as a void pointer, in this case it mus be cast to buffer* </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/keyboardTask.h" line="62" column="6" bodyfile="src/keyboardTask.cpp" bodystart="80" bodyend="175" declfile="src/keyboardTask.h" declline="62" declcolumn="6"/>
      </memberdef>
      <memberdef kind="function" id="keyboard_task_8h_1af3ce5ff30e830a34b29fb2940e47630d" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void IRAM_ATTR</type>
        <definition>void IRAM_ATTR keyBoardISR</definition>
        <argsstring>()</argsstring>
        <name>keyBoardISR</name>
        <briefdescription>
<para>ISR for the timer interrupt, checks wether the keyboard is enabled, if so, updates it and wakes up the keyboard thread if there&apos;s new data to add to the buffer. </para>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="return"><para><linebreak/>
 </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/keyboardTask.h" line="67" column="16" bodyfile="src/keyboardTask.cpp" bodystart="198" bodyend="204" declfile="src/keyboardTask.h" declline="67" declcolumn="16"/>
      </memberdef>
      <memberdef kind="function" id="keyboard_task_8h_1aede5659edabbe94cde2dcdd9e0ccef4a" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>navSignal</type>
        <definition>navSignal navSwitch</definition>
        <argsstring>(char aux)</argsstring>
        <name>navSwitch</name>
        <param>
          <type>char</type>
          <declname>aux</declname>
        </param>
        <briefdescription>
<para>A simple switch statement that trnslates keystrokes to the proper nav signals. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>aux</parametername>
</parameternamelist>
<parameterdescription>
<para>A char character </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>A nav signal (enum) </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/keyboardTask.h" line="72" column="11" bodyfile="src/keyboardTask.cpp" bodystart="177" bodyend="196" declfile="src/keyboardTask.h" declline="72" declcolumn="11"/>
      </memberdef>
    </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="preprocessor">#include<sp/>&lt;Arduino.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;M5Cardputer.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3"><highlight class="normal"></highlight><highlight class="comment">//Functions<sp/>that<sp/>handle<sp/>the<sp/>independent<sp/>keyboard<sp/>ex<sp/>thread<sp/>&amp;<sp/>its<sp/>communication<sp/>with<sp/>other<sp/>threads</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4"><highlight class="normal"></highlight><highlight class="keyword">enum</highlight><highlight class="normal"><sp/>mode<sp/>{text,<sp/>nav};</highlight></codeline>
<codeline lineno="5"><highlight class="normal"></highlight><highlight class="keyword">enum</highlight><highlight class="normal"><sp/>navSignal<sp/>{ESC,<sp/>DEL,<sp/>UP,<sp/>DOWN,<sp/>LEFT,<sp/>RIGHT,ENTER,<sp/>OPT,<sp/>NP};</highlight></codeline>
<codeline lineno="9" refid="classbuffer___class" refkind="compound"><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="classbuffer___class" kindref="compound">buffer_Class</ref><sp/>{</highlight></codeline>
<codeline lineno="10"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">private</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="11"><highlight class="normal"><sp/><sp/>TaskHandle_t<sp/>keyboardTask;<sp/></highlight></codeline>
<codeline lineno="12"><highlight class="normal"><sp/><sp/>hw_timer_t*<sp/>timer;</highlight></codeline>
<codeline lineno="13"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>size;</highlight></codeline>
<codeline lineno="14"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*<sp/>data;<sp/></highlight></codeline>
<codeline lineno="15"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="16" refid="classbuffer___class_1a3ab4b8088883189f50066d32c59f3761" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="classbuffer___class_1a3ab4b8088883189f50066d32c59f3761" kindref="member">cursor</ref>;<sp/></highlight></codeline>
<codeline lineno="17" refid="classbuffer___class_1a0b98b8aef328ebdd93ae50b1139bc06e" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="classbuffer___class_1a0b98b8aef328ebdd93ae50b1139bc06e" kindref="member">keyboardEnable</ref>;<sp/></highlight></codeline>
<codeline lineno="18" refid="classbuffer___class_1a1ac63f7a07b68c3d7e13e56da6689413" refkind="member"><highlight class="normal"><sp/><sp/>mode<sp/><ref refid="classbuffer___class_1a1ac63f7a07b68c3d7e13e56da6689413" kindref="member">Mode</ref>;<sp/></highlight></codeline>
<codeline lineno="19" refid="classbuffer___class_1af0d32aa1fdeac32dc3ee1a0282de80be" refkind="member"><highlight class="normal"><sp/><sp/>navSignal<sp/><ref refid="classbuffer___class_1af0d32aa1fdeac32dc3ee1a0282de80be" kindref="member">signal</ref>;<sp/></highlight></codeline>
<codeline lineno="20"><highlight class="normal"></highlight></codeline>
<codeline lineno="21"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="23"><highlight class="normal"><sp/><sp/><ref refid="classbuffer___class_1a0a59b9bc631ed522318eaf21ce465bba" kindref="member">buffer_Class</ref>();</highlight></codeline>
<codeline lineno="25"><highlight class="normal"><sp/><sp/><ref refid="classbuffer___class_1a0a59b9bc631ed522318eaf21ce465bba" kindref="member">buffer_Class</ref>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>size);</highlight></codeline>
<codeline lineno="28"><highlight class="normal"><sp/><sp/>TaskHandle_t*<sp/><ref refid="classbuffer___class_1a2db51cdf715f303efc54f2a97fad5785" kindref="member">getTaskHandle</ref>();</highlight></codeline>
<codeline lineno="31"><highlight class="normal"><sp/><sp/>hw_timer_t*<sp/><ref refid="classbuffer___class_1a1868135a1d4c1885afac8e601a171057" kindref="member">getHardwareTimer</ref>();</highlight></codeline>
<codeline lineno="35"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classbuffer___class_1a2c8542d9cbe7433a80c3a8dedc5dbb51" kindref="member">begin</ref>(</highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="classbuffer___class_1a0b98b8aef328ebdd93ae50b1139bc06e" kindref="member">keyboardEnable</ref><sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">,<sp/>mode<sp/><ref refid="classbuffer___class_1a1ac63f7a07b68c3d7e13e56da6689413" kindref="member">Mode</ref><sp/>=<sp/>mode::nav);</highlight></codeline>
<codeline lineno="38"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*<sp/><ref refid="classbuffer___class_1ace4fcd26fb004aeb309d96b263b69a22" kindref="member">getData</ref>();</highlight></codeline>
<codeline lineno="41"><highlight class="normal"><sp/><sp/>String<sp/><ref refid="classbuffer___class_1a9debd110754d53e4e49dab7391689ee5" kindref="member">getDataStr</ref>();</highlight></codeline>
<codeline lineno="43"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="classbuffer___class_1a6c2aa2166c5fafbbfe583eb1c4411e49" kindref="member">getBufferSize</ref>();</highlight></codeline>
<codeline lineno="45"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classbuffer___class_1a3e7fefdd89f9d087f79e04f66dc3ef8c" kindref="member">del</ref>();</highlight></codeline>
<codeline lineno="49"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="classbuffer___class_1a3e7fefdd89f9d087f79e04f66dc3ef8c" kindref="member">del</ref>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="classbuffer___class_1a3ab4b8088883189f50066d32c59f3761" kindref="member">cursor</ref>);</highlight></codeline>
<codeline lineno="51"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classbuffer___class_1a6b423be6bc54130652e70f0e9010b619" kindref="member">clearBuffer</ref>();</highlight></codeline>
<codeline lineno="53"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classbuffer___class_1a9501def46c3074fc723c828e8b4fba03" kindref="member">killTask</ref>();</highlight></codeline>
<codeline lineno="54"><highlight class="normal">};</highlight></codeline>
<codeline lineno="55"><highlight class="normal"></highlight></codeline>
<codeline lineno="56"><highlight class="normal"></highlight></codeline>
<codeline lineno="62"><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>keyBoardLoop(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">*<sp/>parameters);</highlight></codeline>
<codeline lineno="63"><highlight class="normal"></highlight></codeline>
<codeline lineno="67"><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>IRAM_ATTR<sp/>keyBoardISR();</highlight></codeline>
<codeline lineno="68"><highlight class="normal"></highlight></codeline>
<codeline lineno="72"><highlight class="normal">navSignal<sp/>navSwitch(</highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>aux);</highlight></codeline>
<codeline lineno="73"><highlight class="normal"></highlight></codeline>
<codeline lineno="74"><highlight class="normal"></highlight><highlight class="keyword">extern</highlight><highlight class="normal"><sp/><ref refid="classbuffer___class" kindref="compound">buffer_Class</ref><sp/>Buffer;</highlight></codeline>
    </programlisting>
    <location file="src/keyboardTask.h"/>
  </compounddef>
</doxygen>
